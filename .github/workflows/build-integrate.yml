# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET build and integrate

on:
  workflow_call:
    outputs:
      version:
        description: The calculated version of the built artifacts
        value: ${{ jobs.build-and-integrate.outputs.version }}

jobs:
  build-and-integrate:
    name: build and integrate
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump-version.outputs.next-version }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: get-latest-version-tag
      id: get-latest-version-tag
      uses: ./.github/actions/release-version-latest
    - name: echo latest-version-tag
      run: echo "${{ steps.get-latest-version-tag.outputs.version }}"

    - name: Bump release version
      id: bump-version
      uses: christian-draeger/increment-semantic-version@1.1.0
      with:
        current-version: "${{ steps.get-latest-version-tag.outputs.version }}"
        version-fragment: 'feature'
#    - name: Do something with your bumped release version
#      run: echo ${{ steps.bump-version.outputs.next-version }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore src
    - name: Build
      run: dotnet build src --no-restore --configuration Release /p:Version=${{ steps.bump-version.outputs.next-version }}
    - name: Test
      run: dotnet test src --no-restore --no-build --filter Category!=Integration --verbosity normal --configuration Release -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover
    - name: Package
      run: dotnet pack src --no-build --configuration Release --include-symbols /p:Version=${{ steps.bump-version.outputs.next-version }}
#
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: nupkg
        # not "src/" prefix, upload-artifact does not support `working-directory`
        path: src/Library/bin/Release/*.nupkg
        if-no-files-found: error
#
